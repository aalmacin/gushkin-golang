type Activity {
  id: ID!
  description: String!
  positive: Boolean!
  fundAmt: Int!
}

type ActivityAction {
  id: ID!
  actionTimestamp: Int!
  activity: Activity!
}

type ActivityActionCount {
  activity: Activity!
  count: Int!
  day: String!
}

input NewWishItemInput {
  description: String!
  price: Int!
  source: String
  priority: Priority!
  status: Status!
}

input UpdateWishItemInput {
  id: String!
  description: String
  price: Int
  source: String
  priority: Priority
  status: Status
}

input CreateActivityInput {
  description: String!
  fundAmt: Int!
  positive: Boolean
}

input PerformActivityInput {
  activityId: Int!
}

type Mutation {
  createWishItem(input: NewWishItemInput!): WishItem!
  updateWishItem(input: UpdateWishItemInput!): WishItem!
  createActivity(input: CreateActivityInput!): Activity!
  performActivity(input: PerformActivityInput!): Activity!
}

enum Priority {
  VERY_HIGH
  HIGH
  MEDIUM
  LOW
  VERY_LOW
}

input GetWishItemsForUser {
  userId: String!
  filter: String
}

type Query {
  getWishItemsForUser(input: GetWishItemsForUser!): [WishItem]!
  getActivitiesForUser(userId: String!): [Activity]!
  getTodaysActivities(userId: String!): [Activity]!
  getCurrentFunds(userId: String!): Int!
  getActivityActionCount(userId: String!): [ActivityActionCount]!
}

enum Status {
  bought
  not_bought
  disabled
}

type WishItem {
  id: ID!
  description: String!
  price: Int!
  source: String
  priority: String!
  status: String!
}
