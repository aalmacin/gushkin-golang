directive @goModel(
  model: String
  models: [String!]
) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION

directive @goField(
  forceResolver: Boolean
  name: String
) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION

scalar Time

type Activity {
  id: ID!
  description: String!
  positive: Boolean!
  fundAmt: Int!
  actions: [Action]! @goField(forceResolver: true)
}

type Action {
  id: ID!
  actionTimestamp: Time!
  activity: Activity! @goField(forceResolver: true)
}

type ActionCount {
  activity: Activity!
  count: Int!
  day: String!
}

type Wish {
  id: ID!
  description: String!
  price: Int!
  source: String
  priority: String!
  status: String!
}

input NewWishInput {
  description: String!
  price: Int!
  source: String
  priority: Priority!
  status: Status!
}

input UpdateWishInput {
  id: String!
  description: String
  price: Int
  source: String
  priority: Priority
  status: Status
}

input CreateActivityInput {
  description: String!
  fundAmt: Int!
  positive: Boolean
}

input PerformActivityInput {
  activityId: Int!
}

type Mutation {
  createWish(input: NewWishInput!): Wish!
  updateWish(input: UpdateWishInput!): Wish!
  createActivity(input: CreateActivityInput!): Activity!
  performActivity(input: PerformActivityInput!): Activity!
}

enum Priority {
  VERY_HIGH
  HIGH
  MEDIUM
  LOW
  VERY_LOW
}

input GetWishInput {
  filter: String
}

type Query {
  wishes(input: GetWishInput): [Wish]!
  activities: [Activity]!
  todaysActivities: [Activity]!
  currentFunds: Int!
  actionCount: [ActionCount]!
}

enum Status {
  bought
  not_bought
  disabled
}
